<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tech on 山田航空ネットワーク3rd</title><link>https://yamacraft.github.io/note/tags/tech/</link><description>Recent content in Tech on 山田航空ネットワーク3rd</description><generator>Hugo</generator><language>ja-jp</language><copyright>yamacraft</copyright><lastBuildDate>Mon, 18 Sep 2023 12:30:00 +0900</lastBuildDate><atom:link href="https://yamacraft.github.io/note/tags/tech/index.xml" rel="self" type="application/rss+xml"/><item><title>DroidKaigi2023に行った雑感（セッション除く）</title><link>https://yamacraft.github.io/note/went-droidkaigi-2023/</link><pubDate>Mon, 18 Sep 2023 12:30:00 +0900</pubDate><guid>https://yamacraft.github.io/note/went-droidkaigi-2023/</guid><description>&lt;p>&lt;a href="https://2023.droidkaigi.jp/">DroidKaigi 2023&lt;/a>のDay1とDay2にオフライン参加しました。&lt;/p>
&lt;p>おそらくセッションに関連する感想はいろんなところで投稿されているはずですので、ここではそれ以外に関する雑感を書きます。&lt;/p></description></item><item><title>Now in Android調査 #1 - 2つのapplicationモジュール</title><link>https://yamacraft.github.io/note/research-now-in-android-1/</link><pubDate>Mon, 19 Jun 2023 12:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/research-now-in-android-1/</guid><description>&lt;p>最近、Android公式のアプリアーキテクチャガイドを読み直していて、その流れで&lt;a href="https://github.com/android/nowinandroid">Now in Android&lt;/a>のプロジェクトの構成を調べています。
公式ドキュメントや公式のブログ記事、YouTubeのフィードを表示してくれるアプリで、プロジェクトはマルチモジュールで構成されています。
アプリアーキテクチャガイドでも、「モジュール化機能を備えた、完全に機能するAndroidアプリ」として取り上げられています。&lt;/p></description></item><item><title>ChatGPT（GPT-4）におまかせ開発やって感じたこと（その１）</title><link>https://yamacraft.github.io/note/review-develop-with-chatgpt-1st/</link><pubDate>Mon, 08 May 2023 12:30:00 +0900</pubDate><guid>https://yamacraft.github.io/note/review-develop-with-chatgpt-1st/</guid><description>&lt;p>まだ完成してないので総評はできませんが、GWのスキマ時間を利用してFlutterのWebアプリケーション開発をやっていました。&lt;/p>
&lt;h3 id="chatgptを活用した開発スタンス">ChatGPTを活用した開発スタンス&lt;/h3>
&lt;p>自分はまだ、Flutterは「書いてあることはなんとなくわかるが、Androidネイティブアプリ開発でやれるレベルは全然できない」という技術レベルです。
ということもあり、せっかくだからChatGPT（GPT-4）にコーディングの大半をお任せしたらどこまで実装できるか試してみよう、と思い立ったのがこの開発の始まりです。&lt;/p></description></item><item><title>HometeにAIリプライ機能を搭載した話を動画にしました</title><link>https://yamacraft.github.io/note/post-youtube-homete-ai-reply/</link><pubDate>Mon, 17 Apr 2023 12:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/post-youtube-homete-ai-reply/</guid><description>&lt;p>すっかりこのブログに書いた気でいましたが、書いていませんでした。（なので書きます。）&lt;/p>
&lt;p>表題の通り、先日&lt;a href="https://homete.yamaglo.jp">Homete&lt;/a>に実装したAIリプライ機能に関する話を動画にして、YouTubeに投稿しました。&lt;/p></description></item><item><title>FlutterでOpenAI APIを利用するときの備忘録</title><link>https://yamacraft.github.io/note/using-openai-with-flutter/</link><pubDate>Mon, 06 Mar 2023 17:30:00 +0900</pubDate><guid>https://yamacraft.github.io/note/using-openai-with-flutter/</guid><description>&lt;p>表題の通りです。&lt;/p>
&lt;p>自分はFlutterの経験がたいへんに浅いので、その点をご留意ください。&lt;/p>
&lt;h2 id="利用方法">利用方法&lt;/h2>
&lt;p>Flutterの場合、&lt;a href="https://pub.dev/packages/openai_client">OpenAIを利用するためのpackageが配布されているようですが&lt;/a>、公式から提供されているものではありません。
ですので、httpパッケージを使っての実装することにしました。&lt;/p></description></item><item><title>Buy Me a Coffeeを利用したいがStripeから拒絶されている【3/13追記】</title><link>https://yamacraft.github.io/note/sad-for-rejected-from-stripe/</link><pubDate>Mon, 13 Feb 2023 18:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/sad-for-rejected-from-stripe/</guid><description>&lt;h2 id="発端">発端&lt;/h2>
&lt;p>先日のOpen AI API（GPT-3）の利用をきっかけに、気軽に金銭的支援を受けられる窓口があってもよいじゃないかと考え、&lt;a href="https://www.buymeacoffee.com/">Buy Me a Coffee&lt;/a>のアカウントの開設をしました。
Buy Me a Coffeeがどういうサービスなのかをいまさら説明するのは冗長ですので、わからない方は各自調べておいてもらえればと。&lt;/p></description></item><item><title>GPT-3に褒めてもらうプロトタイプを作った</title><link>https://yamacraft.github.io/note/create-homete-yo-v1/</link><pubDate>Tue, 07 Feb 2023 18:30:00 +0900</pubDate><guid>https://yamacraft.github.io/note/create-homete-yo-v1/</guid><description>&lt;h2 id="作ったもの紹介">作ったもの紹介&lt;/h2>
&lt;blockquote class="twitter-tweet">&lt;p lang="ja" dir="ltr">実はHometeをリリースして間もなく、最終的にAIに褒めてもらえるスタンドアロン式でいいんじゃないかと思ったりしていました。その当時はまだAIがそこまでのこと出来るのか懐疑的だったんですが、chatGPTで試したら多少テンプレ感はあってもしっかり返答してくれているので、もう実装は可能そう &lt;a href="https://t.co/rtH7r7mlD9">pic.twitter.com/rtH7r7mlD9&lt;/a>&lt;/p></description></item><item><title>AndroidでOGP情報を取得する（OkHttp3+Jsoup）</title><link>https://yamacraft.github.io/note/get-ogp-info-on-android/</link><pubDate>Mon, 23 Jan 2023 18:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/get-ogp-info-on-android/</guid><description>&lt;p>対象のWebサイトのOGP情報を取得する方法ですが、私には対象のサイトのHTMLを読み込んでからmetaタグのOGP情報を取得する方法しか浮かびませんでした。&lt;/p></description></item><item><title>2017年に公式が推奨していたアーキテクチャの備忘録</title><link>https://yamacraft.github.io/note/goodbye-2017-architecture-guide/</link><pubDate>Tue, 13 Dec 2022 00:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/goodbye-2017-architecture-guide/</guid><description>&lt;p>※ 記事公開以降に一部修正と補足を追加しています。&lt;/p>
&lt;p>&lt;a href="https://qiita.com/advent-calendar/2022/android">Android Advent Calendar 2022&lt;/a>の13日目の記事になります。&lt;/p>
&lt;p>去年末、&lt;a href="https://android-developers-jp.googleblog.com/2022/03/rebuilding-our-guide-to-app-architecture.html">Android公式のアーキテクチャガイドが刷新された&lt;/a>のはご存じでしょうか？&lt;/p></description></item><item><title>2023年の学習優先度</title><link>https://yamacraft.github.io/note/study-priorities-for-2023/</link><pubDate>Mon, 12 Dec 2022 00:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/study-priorities-for-2023/</guid><description>&lt;p>※ プログラム関連に限った話をしています。&lt;/p>
&lt;p>2022年は、あまり勉強方面がうまくいきませんでした。
おそらく、最初の目標でやりたいことを増やしすぎたのが原因です。&lt;/p></description></item><item><title>リモートワークがいいかどうかは、場合による</title><link>https://yamacraft.github.io/note/it-depends-on-the-situation-2/</link><pubDate>Tue, 06 Dec 2022 18:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/it-depends-on-the-situation-2/</guid><description>&lt;p>&lt;a href="https://yamacraft.github.io/note/note/it-depends-on-the-situation-1/">クロスプラットフォームを導入したいかどうかは、場合による&lt;/a>&lt;/p></description></item><item><title>クロスプラットフォームを導入したいかどうかは、場合による</title><link>https://yamacraft.github.io/note/it-depends-on-the-situation-1/</link><pubDate>Mon, 05 Dec 2022 00:05:00 +0900</pubDate><guid>https://yamacraft.github.io/note/it-depends-on-the-situation-1/</guid><description>&lt;p>今年のDroidKaigiのサイボウズブースでやっていたアンケートの質問内容に感じ取ったことを記事にするのを、すっかり忘れていたので書きます。
（ちなみにこの写真と記事作成に関しては当日その場で許可をもらっています）&lt;/p></description></item><item><title>AndroidはCSVをサポートしていないので導入は避けようという資料</title><link>https://yamacraft.github.io/note/unsupport-csv-at-android/</link><pubDate>Fri, 02 Dec 2022 00:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/unsupport-csv-at-android/</guid><description>&lt;p>いまプライベートで作っているアプリでCSVインポート機能を実装しようとして、「これは安易に導入しちゃだめだな…」と感じたのでまとめた資料です。&lt;/p></description></item><item><title>yamacraftのブログを支えるシステム（2022年版）</title><link>https://yamacraft.github.io/note/architecture-blog-2022/</link><pubDate>Thu, 01 Dec 2022 12:30:00 +0900</pubDate><guid>https://yamacraft.github.io/note/architecture-blog-2022/</guid><description>&lt;ul>
&lt;li>&lt;a href="https://yamacraft.github.io/note/">山田航空ネットワーク3rd | 山田航空ネットワーク3rd&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamacraft.github.io/">山田航空ネットワークフロント&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamadajirushi.co.jp/">合同会社ヤマダ印&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>このブログを含めた、yamacraftが管理しているWebサイトの構築内容などをまとめました。&lt;/p></description></item><item><title>アプリのデザインと実装のつらみを話しました</title><link>https://yamacraft.github.io/note/talk-2022-08-mobile-benkyokai/</link><pubDate>Mon, 19 Sep 2022 18:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/talk-2022-08-mobile-benkyokai/</guid><description>&lt;p>すっかりこちらに報告し忘れていましたが、先日『&lt;a href="https://wantedly.connpass.com/event/256518/">Mobile勉強会 Wantedly × チームラボ #6&lt;/a>』にLTで参加しました。
LTも含め、発表側での参加は数年ぶりじゃないかという気がします。&lt;/p></description></item><item><title>adbでAlarmManagerの登録内容を確認する</title><link>https://yamacraft.github.io/note/check_alarm_at_adb/</link><pubDate>Thu, 11 Aug 2022 22:30:00 +0900</pubDate><guid>https://yamacraft.github.io/note/check_alarm_at_adb/</guid><description>&lt;p>Androidアプリにおいてアプリ自身で特定の時間に何かしらの処理（以下、アラーム処理）を行いたい場合は、&lt;code>AlarmManager&lt;/code>を使う方法が考えられます。
さらに&lt;code>setInexactRepeating()&lt;/code>を使うことで、（タイミングに制限がありますが）一定間隔でアラーム処理を行うことが可能です。&lt;/p></description></item><item><title>D.I.C.のQUERY_ALL_PACKAGES利用許可申請の対応メモ</title><link>https://yamacraft.github.io/note/send-review-query-all-package/</link><pubDate>Mon, 18 Jul 2022 17:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/send-review-query-all-package/</guid><description>&lt;p>ヤマグロでリリースしている&lt;a href="https://play.google.com/store/apps/details?id=jp.yamaglo.dic">D.I.C.&lt;/a>には、端末がインストールしているアプリの一覧を表示し、各アプリのtargetSdkVersionを確認できる機能があります。&lt;/p></description></item><item><title>GitHub Actionsでtagをpushするための下準備と実行</title><link>https://yamacraft.github.io/note/output_tagname_android/</link><pubDate>Wed, 25 May 2022 19:30:00 +0900</pubDate><guid>https://yamacraft.github.io/note/output_tagname_android/</guid><description>&lt;p>&lt;a href="https://yamacraft.github.io/note/note/idea-branch-model-and-ci/">個人（小規模）アプリ開発のブランチモデルとCI利用方法のアイデア&lt;/a>の続きみたいな記事です。&lt;/p></description></item><item><title>個人（小規模）アプリ開発のブランチモデルとCI利用方法のアイデア</title><link>https://yamacraft.github.io/note/idea-branch-model-and-ci/</link><pubDate>Mon, 16 May 2022 17:30:00 +0900</pubDate><guid>https://yamacraft.github.io/note/idea-branch-model-and-ci/</guid><description>&lt;p>長いこと個人アカウントで管理していたヤマグロの各種プロジェクトを、ヤマグロのGitHub Organizationにまとめる作業を始めました。&lt;/p></description></item><item><title>Flutterの勉強を始めたのと今後のFlutterとの付き合い方</title><link>https://yamacraft.github.io/note/begin-study-flutter/</link><pubDate>Fri, 06 May 2022 20:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/begin-study-flutter/</guid><description>&lt;p>GWの大半は休日返上して午前中にプロダクト開発、午後にFlutter（＋Jetpack Compose）の勉強をやっていました。&lt;/p>
&lt;p>勉強といっても、自分の場合はコード書きながら覚えていくのが手っ取り早いという理由から、ひたすらGoogle Codelabsをやり続けていました。&lt;/p></description></item><item><title>Twitter開発者ポータルの出禁が解除されてた</title><link>https://yamacraft.github.io/note/comeback-twitter-develop-site/</link><pubDate>Tue, 26 Apr 2022 20:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/comeback-twitter-develop-site/</guid><description>&lt;p>Twitterに書いてある内容がすべてなんですが、知らないうちにTwitter開発者ポータルのサイトがリニューアルされて、出禁も解除されていました。&lt;/p></description></item><item><title>Androidアプリの署名に使う鍵ファイルをコマンドライン（CLI）で生成する</title><link>https://yamacraft.github.io/note/create-keystore-cli/</link><pubDate>Mon, 11 Apr 2022 17:30:00 +0900</pubDate><guid>https://yamacraft.github.io/note/create-keystore-cli/</guid><description>&lt;p>Gistの方で以前書いたメモですが、わりと何度も見直す機会があったので、あらためて少し解説を挟みながら記事を書くことにしました。&lt;/p>
&lt;p>&lt;a href="https://gist.github.com/yamacraft/ed03bdcf08cc64bd82cbb82c6d06b9ae">Androidとかで使う証明書鍵をコマンドラインで生成する&lt;/a>&lt;/p></description></item><item><title>CIでAndroidのSecretファイルをどう扱うか（2022年最新版）</title><link>https://yamacraft.github.io/note/manage-secret-file-at-ci-2022/</link><pubDate>Mon, 07 Mar 2022 17:30:00 +0900</pubDate><guid>https://yamacraft.github.io/note/manage-secret-file-at-ci-2022/</guid><description>&lt;p>AndroidアプリのCIでアプリのデプロイ作業などを行いたい場合、Secret（秘匿情報）なファイルの扱いを避けることはできません。
たとえばリリース用のkeystoreファイルだったり、そのファイル関連のパスワード情報などです。&lt;/p></description></item><item><title>AGP7.1でclasspathを追加する</title><link>https://yamacraft.github.io/note/agp-7-1-add-classpath/</link><pubDate>Mon, 31 Jan 2022 18:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/agp-7-1-add-classpath/</guid><description>&lt;p>先日、AGP（Android Gradle Plugin）7.1とAndroid Studio 2021.1.1（Bumblebee）がリリースされました。
これによって、Android StudioのBumblebeeでプロジェクトを新規作成すると、AGP 7.1のgradleファイルが作られるようになりました。&lt;/p></description></item><item><title>Material Design3でTypographyが変わった</title><link>https://yamacraft.github.io/note/material3-typography-list/</link><pubDate>Thu, 20 Jan 2022 20:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/material3-typography-list/</guid><description>&lt;h2 id="material3の正式リリース">Material3の正式リリース&lt;/h2>
&lt;p>先日、Android版のmaterial-componentsの1.5.0がリリースされました。
このリリースバージョンから&lt;a href="https://m3.material.io/">Material Design3&lt;/a>が含まれるようになりました。&lt;/p></description></item><item><title>個人的な2021年のふりかえりと2022年の目標</title><link>https://yamacraft.github.io/note/goal-next-year-2021/</link><pubDate>Thu, 30 Dec 2021 18:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/goal-next-year-2021/</guid><description>&lt;p>先日、会社（仕事）の振り返りを書きましたが、今回は個人的な部分のふりかえりと来年の目標を簡単に書きました。
おそらくこれが年内最後の記事です。&lt;/p></description></item><item><title>山田航空ネットワーク3rdを支える技術の振り返り（2021）</title><link>https://yamacraft.github.io/note/review-blog-system-2021/</link><pubDate>Mon, 27 Dec 2021 18:30:00 +0900</pubDate><guid>https://yamacraft.github.io/note/review-blog-system-2021/</guid><description>&lt;p>&lt;a href="https://yamacraft.github.io/note/note/tech-note-2021/">山田航空ネットワーク3rdを支える技術 | 山田航空ネットワーク3rd&lt;/a>&lt;/p>
&lt;p>こちらを下地に、2021年末時点でのブログのしくみ関する振り返り記事を書きました。&lt;/p></description></item><item><title>Android 12におけるOverScroll表現の雑多なメモ</title><link>https://yamacraft.github.io/note/advent2021-android-overscroll/</link><pubDate>Tue, 14 Dec 2021 00:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/advent2021-android-overscroll/</guid><description>&lt;p>この記事は、 &lt;a href="https://qiita.com/advent-calendar/2021/android">QiitaのAndroid Advent Calendar 2021&lt;/a>の14日目の記事になります。&lt;/p></description></item><item><title>山田航空ネットワーク3rdを支える技術</title><link>https://yamacraft.github.io/note/tech-note-2021/</link><pubDate>Mon, 06 Dec 2021 18:30:00 +0900</pubDate><guid>https://yamacraft.github.io/note/tech-note-2021/</guid><description>&lt;p>今月中に、現在使っているブログのしくみについての振り返り記事を書こうと考えています。
その補足として、現在のブログはどういうしくみで運用しているのかを、あらためてまとめることにしました。&lt;/p></description></item><item><title>Firebase AuthenticationとAndroid推奨アーキテクチャと画面遷移</title><link>https://yamacraft.github.io/note/homete-architecture-firebase-auth/</link><pubDate>Fri, 12 Nov 2021 21:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/homete-architecture-firebase-auth/</guid><description>&lt;h2 id="この記事について">この記事について&lt;/h2>
&lt;p>&lt;a href="https://homete.yamaglo.jp/">Homete&lt;/a>のユーザー認証には、Firebase Authenticationを使っています。
また、基本的な設計は公式が推奨しているアーキテクチャにのっとっています。&lt;/p></description></item><item><title>Android Studioでいつの間にかJDKが消えた件と対応</title><link>https://yamacraft.github.io/note/missing-android-studio-jdk/</link><pubDate>Mon, 16 Aug 2021 17:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/missing-android-studio-jdk/</guid><description>&lt;p>どのタイミングからなのかわかりませんが（おそらく2020.3.1以降）、Android Studioに埋め込まれていたJDKのパスが変わってました。&lt;/p></description></item><item><title>Google I/O 2021のアーカイブ視聴用メモ</title><link>https://yamacraft.github.io/note/memo-google-io-2021-list/</link><pubDate>Tue, 18 May 2021 20:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/memo-google-io-2021-list/</guid><description>&lt;p>今年のGoogle I/Oは日本時間だと本日の25時40分から始まるわけですが、私はリアルタイムでは寝て過ごし、アーカイブの民となります。
個人的にKeynoteよりもWhat&amp;rsquo;s new in系を重要視しているのですが、そっちはもっと後に行われるし、その時間帯まで起きて見ている人は少ないので…。&lt;/p></description></item><item><title>Firebase local emulatorのfirestoreのデータインポート／エクスポートについてのメモ</title><link>https://yamacraft.github.io/note/how-to-firebase-emulator-import-export/</link><pubDate>Mon, 10 May 2021 18:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/how-to-firebase-emulator-import-export/</guid><description>&lt;h2 id="現在のfirebase-local-emulatorのデータをエクスポートする">現在のFirebase local emulatorのデータをエクスポートする&lt;/h2>
&lt;p>Firebase local emulatorが起動中の状態で、 &lt;code>firebase emulators:export&lt;/code> コマンドを呼び出すことで、データをエクスポートできます。&lt;/p></description></item><item><title>アカウント登録方法の選定</title><link>https://yamacraft.github.io/note/select-authentication-service/</link><pubDate>Fri, 23 Apr 2021 22:15:00 +0900</pubDate><guid>https://yamacraft.github.io/note/select-authentication-service/</guid><description>&lt;p>現在進行系で、SNS系のコミュニケーションアプリを開発しています。&lt;/p>
&lt;p>こうしたサービスを作るためには、当然アカウント登録（認証）を実装する必要があります。
今回はFirebase Authentication（＋FirebaseUI）で実装することにしました。
あとはそこから、何の認証方式を使うかを決めなければいけません。&lt;/p></description></item><item><title>俺が学ぶべきプログラミング言語ランキング</title><link>https://yamacraft.github.io/note/my-study-gengo-ranking/</link><pubDate>Mon, 22 Feb 2021 17:30:00 +0900</pubDate><guid>https://yamacraft.github.io/note/my-study-gengo-ranking/</guid><description>&lt;p>定期的に「プログラマーはこの言語を学ぶべき」みたいな記事を見かけます。
と書いていたら、ちょうど令和3年最新版が出てきたみたいですね。&lt;/p>
&lt;p>&lt;a href="https://www.itmedia.co.jp/business/articles/2102/11/news022.html">2021年、ITエンジニアが学びたいプログラミング言語ランキング - ITmedia ビジネスオンライン&lt;/a>&lt;/p></description></item><item><title>JCenter、Bintray終了に伴うヤマグロ提供のAndroidアプリの対応状況</title><link>https://yamacraft.github.io/note/byebye-jcenter-at-android/</link><pubDate>Mon, 08 Feb 2021 15:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/byebye-jcenter-at-android/</guid><description>&lt;p>JFrogから、JCenterやBintrayを含めたサービスの閉鎖が5/1に行われることが発表されました。&lt;/p>
&lt;p>&lt;a href="https://jfrog.com/blog/into-the-sunset-bintray-jcenter-gocenter-and-chartcenter/">Service End for Bintray, JCenter, GoCenter, and ChartCenter | JFrog&lt;/a>&lt;/p>
&lt;p>余談ですが、この記事の見出しには「Into the Sunset on May 1st」と書かれています。
個人的にこういう重大なニュースに関しては、Sunsetなんてお洒落な表現はやらずに、ちゃんとCloseって書くべきだろう派です。&lt;/p></description></item><item><title>FirebaseをCIでデプロイできるようにする（2020年版）</title><link>https://yamacraft.github.io/note/advent2020-firebase-deploy/</link><pubDate>Mon, 21 Dec 2020 00:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/advent2020-firebase-deploy/</guid><description>&lt;p>この記事は、 &lt;a href="https://qiita.com/advent-calendar/2020/firebase">QiitaのFirebase Advent Calendar 2020&lt;/a>の21日目の記事になります。&lt;/p></description></item><item><title>WebViewで表示しているWebページのHTMLを取得する(deprecated)</title><link>https://yamacraft.github.io/note/advent2020-android-webview/</link><pubDate>Sat, 19 Dec 2020 00:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/advent2020-android-webview/</guid><description>&lt;p>この記事は、 &lt;a href="https://qiita.com/advent-calendar/2020/android">QiitaのAndroid Advent Calendar 2020&lt;/a>の19日目の記事になります。&lt;/p></description></item><item><title>D.I.C. レストア記録 #3 - マテリアルデザインとダークテーマへの対応</title><link>https://yamacraft.github.io/note/restore-dic-03/</link><pubDate>Wed, 14 Oct 2020 18:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/restore-dic-03/</guid><description>&lt;h2 id="dicレストア記録記事一覧">D.I.C.レストア記録記事一覧&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://yamacraft.github.io/note/note/restore-dic-00/">#0 - レストアの方針&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamacraft.github.io/note/note/restore-dic-01/">#1 - 開発環境を整える&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamacraft.github.io/note/note/restore-dic-02/">#2 - コードをkotlinに置き換える&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamacraft.github.io/note/note/restore-dic-03/">#3 - マテリアルデザインとダークテーマへの対応&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="dic-v200を公開しました">D.I.C. v2.0.0を公開しました&lt;/h2>
&lt;p>本記事で解説している内容を実装済みのD.I.C.は、現在公開中です。&lt;/p></description></item><item><title>D.I.C. レストア記録 #2 - コードをkotlinに置き換える</title><link>https://yamacraft.github.io/note/restore-dic-02/</link><pubDate>Mon, 12 Oct 2020 20:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/restore-dic-02/</guid><description>&lt;h2 id="dicレストア記録記事一覧">D.I.C.レストア記録記事一覧&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://yamacraft.github.io/note/note/restore-dic-00/">#0 - レストアの方針&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamacraft.github.io/note/note/restore-dic-01/">#1 - 開発環境を整える&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamacraft.github.io/note/note/restore-dic-02/">#2 - コードをkotlinに置き換える&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamacraft.github.io/note/note/restore-dic-03/">#3 - マテリアルデザインとダークテーマへの対応&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="コードをkotlinに変えるということ">コードをKotlinに変えるということ&lt;/h2>
&lt;p>Kotlinは2017年にAndroidアプリの開発公式言語として採用されました。
現在は公式のドキュメントのサンプルもKotlinでの記載が優先して表示されるなど、メインの開発公式言語の地位を築いています。
この記事ではKotlinという言語の優劣に関して触れませんが、人気やシェアという点を考えれば、今後のメンテナンスを考えてKotlinに早急に置き換えてしまいたいです。&lt;/p></description></item><item><title>D.I.C. レストア記録 #1 - 開発環境を整える</title><link>https://yamacraft.github.io/note/restore-dic-01/</link><pubDate>Mon, 12 Oct 2020 15:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/restore-dic-01/</guid><description>&lt;h2 id="dicレストア記録記事一覧">D.I.C.レストア記録記事一覧&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://yamacraft.github.io/note/note/restore-dic-00/">#0 - レストアの方針&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamacraft.github.io/note/note/restore-dic-01/">#1 - 開発環境を整える&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamacraft.github.io/note/note/restore-dic-02/">#2 - コードをkotlinに置き換える&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamacraft.github.io/note/note/restore-dic-03/">#3 - マテリアルデザインとダークテーマへの対応&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="開発環境を整えるということについて">開発環境を整えるということについて&lt;/h2>
&lt;p>メンテナンスが長期に渡って放置されていたプロダクトの改修は、コードを一部修正しては動作確認といった作業をこまめに繰り返しがちです。
早々にコーディング以外の作業は、自動化なり、せめてコンソールでコマンドを実行するだけで完結できるようにしてしまいます。&lt;/p></description></item><item><title>D.I.C. レストア記録 #0 - レストアの方針</title><link>https://yamacraft.github.io/note/restore-dic-00/</link><pubDate>Wed, 07 Oct 2020 12:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/restore-dic-00/</guid><description>&lt;p>&lt;a href="https://yamacraft.github.io/note/note/restore-android-app/">先日の記事&lt;/a>で最後に書いたように、実際に自分が現在進行系でやっているアプリの改修（レストア）の記録等を綴っていくことにします。&lt;/p></description></item><item><title>easylauncherをdocker上でも使えるようにする</title><link>https://yamacraft.github.io/note/easy-launcher-use-docker/</link><pubDate>Mon, 01 Jun 2020 13:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/easy-launcher-use-docker/</guid><description>&lt;p>ただの覚書です。&lt;/p>
&lt;p>自分が開発しているAndroidアプリのプロダクトには、アプリのバリアントを可視化しやすいようにeasylauncherを導入しています。&lt;/p></description></item><item><title>ブログのデプロイをGitHub Actionsで行うようにした</title><link>https://yamacraft.github.io/note/blog-generate-by-github-actions/</link><pubDate>Fri, 29 May 2020 18:30:00 +0900</pubDate><guid>https://yamacraft.github.io/note/blog-generate-by-github-actions/</guid><description>&lt;p>このブログはHugoとGitHub Pagesを使って公開しています。&lt;/p>
&lt;p>これまでは手動で &lt;code>hugo&lt;/code> コマンドを叩いてサイトを生成し、それもリポジトリに加えてpushするやり方で更新していました。&lt;/p></description></item></channel></rss>