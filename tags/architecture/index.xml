<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Architecture on 山田航空ネットワーク3rd</title><link>https://yamacraft.github.io/note/tags/architecture/</link><description>Recent content in Architecture on 山田航空ネットワーク3rd</description><generator>Hugo</generator><language>ja-jp</language><copyright>yamacraft</copyright><lastBuildDate>Sun, 10 Mar 2024 22:00:00 +0900</lastBuildDate><atom:link href="https://yamacraft.github.io/note/tags/architecture/index.xml" rel="self" type="application/rss+xml"/><item><title>Androidアプリのエラーハンドリング（例外の扱い方）を考える（WIP版）</title><link>https://yamacraft.github.io/note/android-error-handling-design-wip/</link><pubDate>Sun, 10 Mar 2024 22:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/android-error-handling-design-wip/</guid><description>&lt;p>最近、Androidアプリのエラーハンドリングの実装方法について考えることがあったので、とりあえずいま頭に浮かんでいる内容をアウトプットしてみることにしました。&lt;/p></description></item><item><title>2017年に公式が推奨していたアーキテクチャの備忘録</title><link>https://yamacraft.github.io/note/goodbye-2017-architecture-guide/</link><pubDate>Tue, 13 Dec 2022 00:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/goodbye-2017-architecture-guide/</guid><description>&lt;p>※ 記事公開以降に一部修正と補足を追加しています。&lt;/p>
&lt;p>&lt;a href="https://qiita.com/advent-calendar/2022/android">Android Advent Calendar 2022&lt;/a>の13日目の記事になります。&lt;/p>
&lt;p>去年末、&lt;a href="https://android-developers-jp.googleblog.com/2022/03/rebuilding-our-guide-to-app-architecture.html">Android公式のアーキテクチャガイドが刷新された&lt;/a>のはご存じでしょうか？&lt;/p>
&lt;p>Android公式がアーキテクチャガイドを用意したのは（記憶が間違っていなければ）2017年のGoogleIOからでした。
あのころに比べると、明らかに文量が増えています。
その変化に戸惑っている方はいるんじゃないでしょうか。&lt;/p></description></item></channel></rss>