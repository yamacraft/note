<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Android on 山田航空ネットワーク3rd</title><link>https://yamacraft.github.io/note/tags/android/</link><description>Recent content in Android on 山田航空ネットワーク3rd</description><generator>Hugo</generator><language>ja-jp</language><copyright>yamacraft</copyright><lastBuildDate>Sun, 10 Mar 2024 22:00:00 +0900</lastBuildDate><atom:link href="https://yamacraft.github.io/note/tags/android/index.xml" rel="self" type="application/rss+xml"/><item><title>Androidアプリのエラーハンドリング（例外の扱い方）を考える（WIP版）</title><link>https://yamacraft.github.io/note/android-error-handling-design-wip/</link><pubDate>Sun, 10 Mar 2024 22:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/android-error-handling-design-wip/</guid><description>&lt;p>最近、Androidアプリのエラーハンドリングの実装方法について考えることがあったので、とりあえずいま頭に浮かんでいる内容をアウトプットしてみることにしました。&lt;/p></description></item><item><title>Simple Mobile Toolsが売却されたので、Fossifyに移行した</title><link>https://yamacraft.github.io/note/goodbye-simple-mobile-tools/</link><pubDate>Sat, 09 Mar 2024 15:30:00 +0900</pubDate><guid>https://yamacraft.github.io/note/goodbye-simple-mobile-tools/</guid><description>&lt;p>オープンソースで開発が進められていたSimple Mobile Toolsが、ZipoApps社へ売却されることが去年の12月に判明しました。
これはプロジェクトを立ち上げたtibbi氏が認めています。&lt;/p></description></item><item><title>Now in Android調査 #1 - 2つのapplicationモジュール</title><link>https://yamacraft.github.io/note/research-now-in-android-1/</link><pubDate>Mon, 19 Jun 2023 12:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/research-now-in-android-1/</guid><description>&lt;p>最近、Android公式のアプリアーキテクチャガイドを読み直していて、その流れで&lt;a href="https://github.com/android/nowinandroid">Now in Android&lt;/a>のプロジェクトの構成を調べています。
公式ドキュメントや公式のブログ記事、YouTubeのフィードを表示してくれるアプリで、プロジェクトはマルチモジュールで構成されています。
アプリアーキテクチャガイドでも、「モジュール化機能を備えた、完全に機能するAndroidアプリ」として取り上げられています。&lt;/p></description></item><item><title>AndroidでOGP情報を取得する（OkHttp3+Jsoup）</title><link>https://yamacraft.github.io/note/get-ogp-info-on-android/</link><pubDate>Mon, 23 Jan 2023 18:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/get-ogp-info-on-android/</guid><description>&lt;p>対象のWebサイトのOGP情報を取得する方法ですが、私には対象のサイトのHTMLを読み込んでからmetaタグのOGP情報を取得する方法しか浮かびませんでした。&lt;/p></description></item><item><title>2017年に公式が推奨していたアーキテクチャの備忘録</title><link>https://yamacraft.github.io/note/goodbye-2017-architecture-guide/</link><pubDate>Tue, 13 Dec 2022 00:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/goodbye-2017-architecture-guide/</guid><description>&lt;p>※ 記事公開以降に一部修正と補足を追加しています。&lt;/p>
&lt;p>&lt;a href="https://qiita.com/advent-calendar/2022/android">Android Advent Calendar 2022&lt;/a>の13日目の記事になります。&lt;/p>
&lt;p>去年末、&lt;a href="https://android-developers-jp.googleblog.com/2022/03/rebuilding-our-guide-to-app-architecture.html">Android公式のアーキテクチャガイドが刷新された&lt;/a>のはご存じでしょうか？&lt;/p>
&lt;p>Android公式がアーキテクチャガイドを用意したのは（記憶が間違っていなければ）2017年のGoogleIOからでした。
あのころに比べると、明らかに文量が増えています。
その変化に戸惑っている方はいるんじゃないでしょうか。&lt;/p></description></item><item><title>AndroidはCSVをサポートしていないので導入は避けようという資料</title><link>https://yamacraft.github.io/note/unsupport-csv-at-android/</link><pubDate>Fri, 02 Dec 2022 00:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/unsupport-csv-at-android/</guid><description>&lt;p>いまプライベートで作っているアプリでCSVインポート機能を実装しようとして、「これは安易に導入しちゃだめだな…」と感じたのでまとめた資料です。&lt;/p></description></item><item><title>アプリのデザインと実装のつらみを話しました</title><link>https://yamacraft.github.io/note/talk-2022-08-mobile-benkyokai/</link><pubDate>Mon, 19 Sep 2022 18:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/talk-2022-08-mobile-benkyokai/</guid><description>&lt;p>すっかりこちらに報告し忘れていましたが、先日『&lt;a href="https://wantedly.connpass.com/event/256518/">Mobile勉強会 Wantedly × チームラボ #6&lt;/a>』にLTで参加しました。
LTも含め、発表側での参加は数年ぶりじゃないかという気がします。&lt;/p></description></item><item><title>adbでAlarmManagerの登録内容を確認する</title><link>https://yamacraft.github.io/note/check_alarm_at_adb/</link><pubDate>Thu, 11 Aug 2022 22:30:00 +0900</pubDate><guid>https://yamacraft.github.io/note/check_alarm_at_adb/</guid><description>&lt;p>Androidアプリにおいてアプリ自身で特定の時間に何かしらの処理（以下、アラーム処理）を行いたい場合は、&lt;code>AlarmManager&lt;/code>を使う方法が考えられます。
さらに&lt;code>setInexactRepeating()&lt;/code>を使うことで、（タイミングに制限がありますが）一定間隔でアラーム処理を行うことが可能です。&lt;/p></description></item><item><title>D.I.C.のQUERY_ALL_PACKAGES利用許可申請の対応メモ</title><link>https://yamacraft.github.io/note/send-review-query-all-package/</link><pubDate>Mon, 18 Jul 2022 17:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/send-review-query-all-package/</guid><description>&lt;p>ヤマグロでリリースしている&lt;a href="https://play.google.com/store/apps/details?id=jp.yamaglo.dic">D.I.C.&lt;/a>には、端末がインストールしているアプリの一覧を表示し、各アプリのtargetSdkVersionを確認できる機能があります。&lt;/p>
&lt;p>この機能を実装するために、アプリでは &lt;code>PackageManager.queryIntentActivities()&lt;/code> を使っています。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">val&lt;/span> packageManager = getApplication&amp;lt;Application&amp;gt;().packageManager
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">val&lt;/span> intent = Intent(&lt;span style="color:#a6e22e">Intent&lt;/span>.ACTION_MAIN).apply {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> addCategory(&lt;span style="color:#a6e22e">Intent&lt;/span>.CATEGORY_LAUNCHER)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 該当するActivity（アプリ）の一覧を取得
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">val&lt;/span> activities = packageManager.queryIntentActivities(intent, &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>このAPIを使うためには、 &lt;code>QUERY_ALL_PACKAGES&lt;/code> 権限の利用が必要です。
設定しなかった場合APIがExceptionを吐くことはありませんが、空の情報が返却されます。&lt;/p></description></item><item><title>GitHub Actionsでtagをpushするための下準備と実行</title><link>https://yamacraft.github.io/note/output_tagname_android/</link><pubDate>Wed, 25 May 2022 19:30:00 +0900</pubDate><guid>https://yamacraft.github.io/note/output_tagname_android/</guid><description>&lt;p>&lt;a href="https://yamacraft.github.io/note/idea-branch-model-and-ci/">個人（小規模）アプリ開発のブランチモデルとCI利用方法のアイデア&lt;/a>の続きみたいな記事です。&lt;/p>
&lt;p>masterブランチが更新されたタイミングで、tagの作成とtag pushをCI上でやろうとしていました。
この作業自体は、Gitコマンドを２つたたくだけで実装できます。&lt;/p></description></item><item><title>個人（小規模）アプリ開発のブランチモデルとCI利用方法のアイデア</title><link>https://yamacraft.github.io/note/idea-branch-model-and-ci/</link><pubDate>Mon, 16 May 2022 17:30:00 +0900</pubDate><guid>https://yamacraft.github.io/note/idea-branch-model-and-ci/</guid><description>&lt;p>長いこと個人アカウントで管理していたヤマグロの各種プロジェクトを、ヤマグロのGitHub Organizationにまとめる作業を始めました。&lt;/p>
&lt;p>ついでに使っているCIがCircle CIだったりGitHub Actionsだったりと統一感がなかったのでGitHub Actionに一元化、CIでやる内容の改修も行っています。&lt;/p></description></item><item><title>Androidアプリの署名に使う鍵ファイルをコマンドライン（CLI）で生成する</title><link>https://yamacraft.github.io/note/create-keystore-cli/</link><pubDate>Mon, 11 Apr 2022 17:30:00 +0900</pubDate><guid>https://yamacraft.github.io/note/create-keystore-cli/</guid><description>&lt;p>Gistの方で以前書いたメモですが、わりと何度も見直す機会があったので、あらためて少し解説を挟みながら記事を書くことにしました。&lt;/p>
&lt;p>&lt;a href="https://gist.github.com/yamacraft/ed03bdcf08cc64bd82cbb82c6d06b9ae">Androidとかで使う証明書鍵をコマンドラインで生成する&lt;/a>&lt;/p>
&lt;h2 id="基本">基本&lt;/h2>
&lt;p>Androidアプリの署名に使う鍵ファイルを生成したい場合、 &lt;code>keytool&lt;/code> を使います。&lt;/p></description></item><item><title>CIでAndroidのSecretファイルをどう扱うか（2022年最新版）</title><link>https://yamacraft.github.io/note/manage-secret-file-at-ci-2022/</link><pubDate>Mon, 07 Mar 2022 17:30:00 +0900</pubDate><guid>https://yamacraft.github.io/note/manage-secret-file-at-ci-2022/</guid><description>&lt;p>AndroidアプリのCIでアプリのデプロイ作業などを行いたい場合、Secret（秘匿情報）なファイルの扱いを避けることはできません。
たとえばリリース用のkeystoreファイルだったり、そのファイル関連のパスワード情報などです。&lt;/p></description></item><item><title>AGP7.1でclasspathを追加する</title><link>https://yamacraft.github.io/note/agp-7-1-add-classpath/</link><pubDate>Mon, 31 Jan 2022 18:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/agp-7-1-add-classpath/</guid><description>&lt;p>先日、AGP（Android Gradle Plugin）7.1とAndroid Studio 2021.1.1（Bumblebee）がリリースされました。
これによって、Android StudioのBumblebeeでプロジェクトを新規作成すると、AGP 7.1のgradleファイルが作られるようになりました。&lt;/p></description></item><item><title>Material Design3でTypographyが変わった</title><link>https://yamacraft.github.io/note/material3-typography-list/</link><pubDate>Thu, 20 Jan 2022 20:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/material3-typography-list/</guid><description>&lt;h2 id="material3の正式リリース">Material3の正式リリース&lt;/h2>
&lt;p>先日、Android版のmaterial-componentsの1.5.0がリリースされました。
このリリースバージョンから&lt;a href="https://m3.material.io/">Material Design3&lt;/a>が含まれるようになりました。&lt;/p></description></item><item><title>Android 12におけるOverScroll表現の雑多なメモ</title><link>https://yamacraft.github.io/note/advent2021-android-overscroll/</link><pubDate>Tue, 14 Dec 2021 00:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/advent2021-android-overscroll/</guid><description>&lt;p>この記事は、 &lt;a href="https://qiita.com/advent-calendar/2021/android">QiitaのAndroid Advent Calendar 2021&lt;/a>の14日目の記事になります。&lt;/p>
&lt;h2 id="android-12のoverscroll">Android 12のOverScroll&lt;/h2>
&lt;p>Android 12では、オーバースクロールの表現方法が変わりました。
いわゆる「伸びる（ストレッチ）」やつです。&lt;/p></description></item><item><title>HometeのtargetSdkVersionを31に上げています</title><link>https://yamacraft.github.io/note/updated-homete-api-31/</link><pubDate>Mon, 29 Nov 2021 18:30:00 +0900</pubDate><guid>https://yamacraft.github.io/note/updated-homete-api-31/</guid><description>&lt;p>Android 12が正式リリースされ、自分の手元にもPixel6 Proが届いたこともあり、HometeのtargetSdkVersionを31に上げる作業をしています。&lt;/p></description></item><item><title>Pixel6 Proを買いました</title><link>https://yamacraft.github.io/note/buy-pixel6-pro/</link><pubDate>Mon, 15 Nov 2021 18:30:00 +0900</pubDate><guid>https://yamacraft.github.io/note/buy-pixel6-pro/</guid><description>&lt;p>表題の通りです。&lt;/p>
&lt;p>&lt;img src="https://yamacraft.github.io/note/image/add_buy-pixel6-pro/pixel6pro_buy.jpg" alt="Pixel6 Pro買いました">&lt;/p>
&lt;p>ちなみに去年Pixel5を買っていませんでしたが、完全に買うタイミングを逃してしまったからです。
その間にPixel4のバッテリー膨張があり、今年はさっさと買い換えよう、という判断に至りました。&lt;/p></description></item><item><title>Firebase AuthenticationとAndroid推奨アーキテクチャと画面遷移</title><link>https://yamacraft.github.io/note/homete-architecture-firebase-auth/</link><pubDate>Fri, 12 Nov 2021 21:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/homete-architecture-firebase-auth/</guid><description>&lt;h2 id="この記事について">この記事について&lt;/h2>
&lt;p>&lt;a href="https://homete.yamaglo.jp/">Homete&lt;/a>のユーザー認証には、Firebase Authenticationを使っています。
また、基本的な設計は公式が推奨しているアーキテクチャにのっとっています。&lt;/p>
&lt;p>&lt;a href="https://developer.android.com/jetpack/guide">アプリ アーキテクチャ ガイド  |  Android デベロッパー  |  Android Developers&lt;/a>&lt;/p></description></item><item><title>Android Studioでいつの間にかJDKが消えた件と対応</title><link>https://yamacraft.github.io/note/missing-android-studio-jdk/</link><pubDate>Mon, 16 Aug 2021 17:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/missing-android-studio-jdk/</guid><description>&lt;p>どのタイミングからなのかわかりませんが（おそらく2020.3.1以降）、Android Studioに埋め込まれていたJDKのパスが変わってました。&lt;/p></description></item><item><title>Hometeの新しいホーム画面のデザイン案</title><link>https://yamacraft.github.io/note/homete-new-home-design-idea/</link><pubDate>Mon, 19 Jul 2021 22:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/homete-new-home-design-idea/</guid><description>&lt;p>Hometeのキャッチコピーを変更し、PlayストアとWebページ（現在はランディングページとして利用中）に反映しました。
Webページ側はさらにランディングページらしく、Hometeの概要やら特徴を追記しました。&lt;/p></description></item><item><title>Hometeのα版（オープンテスト）をリリースしました</title><link>https://yamacraft.github.io/note/release-homete-alpha/</link><pubDate>Wed, 30 Jun 2021 22:30:00 +0900</pubDate><guid>https://yamacraft.github.io/note/release-homete-alpha/</guid><description>&lt;p>本日2021年6月30日に、『Homete』という名前の新規サービス（アプリ）をオープンテストで公開しました。&lt;/p>
&lt;p>&lt;a href="https://play.google.com/store/apps/details?id=jp.yamaglo.homete">Homete - 誰かを褒めて、誰かに褒められるコミュニケーションツール - Google Play のアプリ&lt;/a>&lt;/p></description></item><item><title>Google I/O 2021のアーカイブ視聴用メモ</title><link>https://yamacraft.github.io/note/memo-google-io-2021-list/</link><pubDate>Tue, 18 May 2021 20:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/memo-google-io-2021-list/</guid><description>&lt;p>今年のGoogle I/Oは日本時間だと本日の25時40分から始まるわけですが、私はリアルタイムでは寝て過ごし、アーカイブの民となります。
個人的にKeynoteよりもWhat&amp;rsquo;s new in系を重要視しているのですが、そっちはもっと後に行われるし、その時間帯まで起きて見ている人は少ないので…。&lt;/p></description></item><item><title>JCenter、Bintray終了に伴うヤマグロ提供のAndroidアプリの対応状況</title><link>https://yamacraft.github.io/note/byebye-jcenter-at-android/</link><pubDate>Mon, 08 Feb 2021 15:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/byebye-jcenter-at-android/</guid><description>&lt;p>JFrogから、JCenterやBintrayを含めたサービスの閉鎖が5/1に行われることが発表されました。&lt;/p>
&lt;p>&lt;a href="https://jfrog.com/blog/into-the-sunset-bintray-jcenter-gocenter-and-chartcenter/">Service End for Bintray, JCenter, GoCenter, and ChartCenter | JFrog&lt;/a>&lt;/p>
&lt;p>余談ですが、この記事の見出しには「Into the Sunset on May 1st」と書かれています。
個人的にこういう重大なニュースに関しては、Sunsetなんてお洒落な表現はやらずに、ちゃんとCloseって書くべきだろう派です。&lt;/p></description></item><item><title>作業記録（2021年1月25日）</title><link>https://yamacraft.github.io/note/work-report-20210125/</link><pubDate>Mon, 25 Jan 2021 18:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/work-report-20210125/</guid><description>&lt;p>年明けから決算関連で細かい事務作業が大量発生していましたが、ようやく一段落ついたので開発関係の作業を本格的に再開。&lt;/p>
&lt;p>まずはAAびゅーわとD.I.C.のAndroid Gradleプラグインをアップデート（AS4.1.2対応）して、ついでにライブラリもアップデートして動作確認。&lt;/p></description></item><item><title>WebViewで表示しているWebページのHTMLを取得する(deprecated)</title><link>https://yamacraft.github.io/note/advent2020-android-webview/</link><pubDate>Sat, 19 Dec 2020 00:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/advent2020-android-webview/</guid><description>&lt;p>この記事は、 &lt;a href="https://qiita.com/advent-calendar/2020/android">QiitaのAndroid Advent Calendar 2020&lt;/a>の19日目の記事になります。&lt;/p>
&lt;h2 id="言いたいこと">言いたいこと&lt;/h2>
&lt;p>&lt;strong>WebViewで表示しているWebページのHTMLを取得しようとするのは、セキュリティ懸念からお勧めできません&lt;/strong>&lt;/p></description></item><item><title>D.I.C. レストア記録 #3 - マテリアルデザインとダークテーマへの対応</title><link>https://yamacraft.github.io/note/restore-dic-03/</link><pubDate>Wed, 14 Oct 2020 18:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/restore-dic-03/</guid><description>&lt;h2 id="dicレストア記録記事一覧">D.I.C.レストア記録記事一覧&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://yamacraft.github.io/note/restore-dic-00/">#0 - レストアの方針&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamacraft.github.io/note/restore-dic-01/">#1 - 開発環境を整える&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamacraft.github.io/note/restore-dic-02/">#2 - コードをkotlinに置き換える&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamacraft.github.io/note/restore-dic-03/">#3 - マテリアルデザインとダークテーマへの対応&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="dic-v200を公開しました">D.I.C. v2.0.0を公開しました&lt;/h2>
&lt;p>本記事で解説している内容を実装済みのD.I.C.は、現在公開中です。&lt;/p></description></item><item><title>D.I.C. レストア記録 #2 - コードをkotlinに置き換える</title><link>https://yamacraft.github.io/note/restore-dic-02/</link><pubDate>Mon, 12 Oct 2020 20:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/restore-dic-02/</guid><description>&lt;h2 id="dicレストア記録記事一覧">D.I.C.レストア記録記事一覧&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://yamacraft.github.io/note/restore-dic-00/">#0 - レストアの方針&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamacraft.github.io/note/restore-dic-01/">#1 - 開発環境を整える&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamacraft.github.io/note/restore-dic-02/">#2 - コードをkotlinに置き換える&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamacraft.github.io/note/restore-dic-03/">#3 - マテリアルデザインとダークテーマへの対応&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="コードをkotlinに変えるということ">コードをKotlinに変えるということ&lt;/h2>
&lt;p>Kotlinは2017年にAndroidアプリの開発公式言語として採用されました。
現在は公式のドキュメントのサンプルもKotlinでの記載が優先して表示されるなど、メインの開発公式言語の地位を築いています。
この記事ではKotlinという言語の優劣に関して触れませんが、人気やシェアという点を考えれば、今後のメンテナンスを考えてKotlinに早急に置き換えてしまいたいです。&lt;/p></description></item><item><title>D.I.C. レストア記録 #1 - 開発環境を整える</title><link>https://yamacraft.github.io/note/restore-dic-01/</link><pubDate>Mon, 12 Oct 2020 15:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/restore-dic-01/</guid><description>&lt;h2 id="dicレストア記録記事一覧">D.I.C.レストア記録記事一覧&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://yamacraft.github.io/note/restore-dic-00/">#0 - レストアの方針&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamacraft.github.io/note/restore-dic-01/">#1 - 開発環境を整える&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamacraft.github.io/note/restore-dic-02/">#2 - コードをkotlinに置き換える&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamacraft.github.io/note/restore-dic-03/">#3 - マテリアルデザインとダークテーマへの対応&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="開発環境を整えるということについて">開発環境を整えるということについて&lt;/h2>
&lt;p>メンテナンスが長期に渡って放置されていたプロダクトの改修は、コードを一部修正しては動作確認といった作業をこまめに繰り返しがちです。
早々にコーディング以外の作業は、自動化なり、せめてコンソールでコマンドを実行するだけで完結できるようにしてしまいます。&lt;/p></description></item><item><title>D.I.C. レストア記録 #0 - レストアの方針</title><link>https://yamacraft.github.io/note/restore-dic-00/</link><pubDate>Wed, 07 Oct 2020 12:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/restore-dic-00/</guid><description>&lt;p>&lt;a href="https://yamacraft.github.io/note/restore-android-app/">先日の記事&lt;/a>で最後に書いたように、実際に自分が現在進行系でやっているアプリの改修（レストア）の記録等を綴っていくことにします。&lt;/p>
&lt;h2 id="dicレストア記録記事一覧">D.I.C.レストア記録記事一覧&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://yamacraft.github.io/note/restore-dic-00/">#0 - レストアの方針&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamacraft.github.io/note/restore-dic-01/">#1 - 開発環境を整える&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamacraft.github.io/note/restore-dic-02/">#2 - コードをkotlinに置き換える&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamacraft.github.io/note/restore-dic-03/">#3 - マテリアルデザインとダークテーマへの対応&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="dic-について">D.I.C. について&lt;/h2>
&lt;p>数年前に自分が思いつきと勢いで作った、デバイスの情報を表示するだけのアプリです。
ついでに、端末にインストールしているアプリの一覧を、targetSdkVesion付きで見れる機能も追加していました。
現在は配信を停止しています。&lt;/p></description></item><item><title>Androidアプリのレストアという需要</title><link>https://yamacraft.github.io/note/restore-android-app/</link><pubDate>Mon, 05 Oct 2020 23:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/restore-android-app/</guid><description>&lt;p>壺fm#6でも触れた内容を、ブラッシュアップした内容です。&lt;/p>
&lt;p>最近、YouTubeのお勧め動画に出て来るようになってから、旧車のレストアやカスタマイズをしている動画をよく見ています。
動かなかったり朽ちた機械を試行錯誤したり、時には既存のものを組み合わせて解決する様を見ていると、なんだか既視感があります。&lt;/p></description></item><item><title>easylauncherをdocker上でも使えるようにする</title><link>https://yamacraft.github.io/note/easy-launcher-use-docker/</link><pubDate>Mon, 01 Jun 2020 13:00:00 +0900</pubDate><guid>https://yamacraft.github.io/note/easy-launcher-use-docker/</guid><description>&lt;p>ただの覚書です。&lt;/p>
&lt;p>自分が開発しているAndroidアプリのプロダクトには、アプリのバリアントを可視化しやすいようにeasylauncherを導入しています。&lt;/p></description></item></channel></rss>